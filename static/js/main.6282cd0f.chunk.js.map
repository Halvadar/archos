{"version":3,"sources":["Components/Main/Header/Navbar/logo.svg","Components/Main/Header/Navbar/hamburger.svg","Components/Main/Header/Navbar/Navbar.js","Reducers/rootReducer.js","Components/Main/Sandbox.js","Components/Main/Main.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","aaa","q","hamburgerref","refref","onMouseEnterFunc","arg","console","log","setState","loginOnMouseEnter","state","onmousenteranimation","registerOnMouseEnter","onmouseenteranimation1","onMouseLeaveFunc","loginAnimation","bot","interval","setInterval","clearInterval","registerAnimation","hamburgerclick","window","getComputedStyle","getPropertyValue","hamburgerheight","hamburgerwidth","style","hamburgertop","React","createRef","r","this","innerWidth","className","src","logo","alt","onMouseEnter","onMouseLeave","position","bottom","width","display","ref","onClick","alignItems","right","height","hamburger","Component","click","action","type","Object","assign","info","Sandbox","a","s","background","justifyContent","padding","store","createStore","Main","burgerref","click1","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6282cd0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3eecde31.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.86595150.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./Navbar.css\";\r\nimport { connect } from \"react-redux\";\r\nimport hamburger from \"./hamburger.svg\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginOnMouseEnter: false,\r\n      registerOnMouseEnter: false,\r\n      loginAnimation: 0,\r\n      registerAnimation: 0,\r\n      hamburgerheight: \"auto\",\r\n      hamburgerwidth: \"auto\",\r\n      hamburgertop: null\r\n    };\r\n    this.hamburgerref = React.createRef(this.hamburgerref);\r\n    this.r = React.createRef(this.r);\r\n  }\r\n\r\n  aaa = q => {\r\n    this.hamburgerref = q;\r\n    this.props.refref(q);\r\n  };\r\n  componentWillUpdate() {}\r\n  componentDidUpdate() {}\r\n  componentDidMount() {\r\n    console.log(\r\n      window.getComputedStyle(this.hamburgerref).getPropertyValue(\"top\")\r\n    );\r\n\r\n    /* var a = 0;\r\n    var abc = setInterval(() => {\r\n      a++;\r\n      if (a < 100) {\r\n        console.log(\r\n          window.getComputedStyle(this.hamburgerref).getPropertyValue(\"top\")\r\n        );\r\n      } else {\r\n        clearInterval(abc);\r\n      }\r\n    }, 1); */\r\n  }\r\n\r\n  onMouseEnterFunc = arg => {\r\n    console.log();\r\n    if (arg === 0) {\r\n      this.setState({ loginOnMouseEnter: true });\r\n      console.log(this.state.loginOnMouseEnter);\r\n      this.onmousenteranimation();\r\n    } else {\r\n      this.setState({ registerOnMouseEnter: true });\r\n      this.onmouseenteranimation1();\r\n    }\r\n  };\r\n  onMouseLeaveFunc = arg => {\r\n    if (arg === 0) {\r\n      this.setState({ loginOnMouseEnter: false });\r\n    } else this.setState({ registerOnMouseEnter: false });\r\n  };\r\n\r\n  onmousenteranimation = () => {\r\n    console.log(this.state.loginAnimation);\r\n    var bot = 0;\r\n    var interval = setInterval(() => {\r\n      if (bot < 10 && this.state.loginOnMouseEnter === true) {\r\n        bot++;\r\n        this.setState({ loginAnimation: bot });\r\n        console.log(this.state.loginOnMouseEnter);\r\n      } else if (bot > 0 && this.state.loginOnMouseEnter === false) {\r\n        bot = bot - 1;\r\n        this.setState({ loginAnimation: bot });\r\n      } else if (bot === 10 && this.state.loginOnMouseEnter === true) {\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  onmouseenteranimation1 = () => {\r\n    console.log(this.state.registerAnimation);\r\n    var bot = 0;\r\n    var interval = setInterval(() => {\r\n      if (bot < 10 && this.state.registerOnMouseEnter === true) {\r\n        bot++;\r\n        this.setState({ registerAnimation: bot });\r\n        console.log(this.state.registerOnMouseEnter);\r\n      } else if (bot > 0 && this.state.registerOnMouseEnter === false) {\r\n        bot = bot - 1;\r\n        this.setState({ registerAnimation: bot });\r\n      } else if (bot === 10 && this.state.registerOnMouseEnter === true) {\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  hamburgerclick = () => {\r\n    console.log(\r\n      window.getComputedStyle(this.hamburgerref).getPropertyValue(\"top\")\r\n    );\r\n    this.setState({ hamburgerheight: 100, hamburgerwidth: 20 }, () => {\r\n      console.log(\r\n        window.getComputedStyle(this.hamburgerref).getPropertyValue(\"top\")\r\n      );\r\n    });\r\n    console.log(\r\n      window.getComputedStyle(this.hamburgerref).getPropertyValue(\"top\")\r\n    );\r\n  };\r\n\r\n  style = () => {\r\n    console.log(\"asd\");\r\n    return this.state.hamburgerwidth;\r\n  };\r\n\r\n  render() {\r\n    if (window.innerWidth >= 768) {\r\n      return (\r\n        <div style={{}} className=\"navbar justify-content-between custnavbar\">\r\n          <img src={logo} alt=\"Archos\" className=\" mt-2 img-l img-sm img-md\" />\r\n\r\n          <div className=\"row links\">\r\n            <div\r\n              className=\"custnavitemcont\"\r\n              onMouseEnter={() => this.onMouseEnterFunc(0)}\r\n              onMouseLeave={() => this.onMouseLeaveFunc(0)}\r\n            >\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  bottom: this.state.loginAnimation + \"%\"\r\n                }}\r\n                className=\"custnavitem\"\r\n              >\r\n                Log In\r\n              </div>\r\n              <div\r\n                className=\"shadow\"\r\n                style={{\r\n                  width: `${this.state.loginAnimation * 10}%`\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div\r\n              className=\"custnavitemcont\"\r\n              onMouseEnter={() => this.onMouseEnterFunc(1)}\r\n              onMouseLeave={() => this.onMouseLeaveFunc(1)}\r\n            >\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  bottom: this.state.registerAnimation + \"%\"\r\n                }}\r\n                className=\" custnavitem\"\r\n              >\r\n                Register\r\n              </div>\r\n              <div\r\n                className=\"shadow\"\r\n                style={{\r\n                  width: `${this.state.registerAnimation * 10}%`\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{ display: \"flex\", position: \"relative\" }}\r\n          className=\" d-flex custnavbar justify-content-between \"\r\n        >\r\n          <div className=\" mt-2 img-l img-sm img-md\">\r\n            <img\r\n              ref={r => (this.r = r)}\r\n              src={logo}\r\n              alt=\"Archos\"\r\n              width=\"100%\"\r\n              onClick={this.hamburgerclick}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              alignItems: \"center\"\r\n            }}\r\n            className=\"\"\r\n          >\r\n            <div\r\n              ref={q => this.aaa(q)}\r\n              style={{\r\n                position: \"absolute\",\r\n                right: \"5%\",\r\n                width: this.state.hamburgerwidth,\r\n                height: this.state.hamburgerheight\r\n              }}\r\n            >\r\n              <div onClick={this.hamburgerclick} style={{}}>\r\n                <div>\r\n                  <img src={hamburger} width=\"100%\"></img>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","const click = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"CLICK\":\r\n      console.log(\"asasd\");\r\n      return Object.assign({}, state, action.info);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default click;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Sandbox extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n    this.a = React.createRef(this.s);\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(window.getComputedStyle(this.a).getPropertyValue(\"top\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* console.log(window.getComputedStyle(this.a).getPropertyValue(\"top\"));\r\n    var a = 0;\r\n    var abc = setInterval(() => {\r\n      a++;\r\n      if (a < 100) {\r\n        console.log(window.getComputedStyle(this.a).getPropertyValue(\"top\"));\r\n      } else {\r\n        clearInterval(abc);\r\n      }\r\n    }, 1);\r\n    console.log(\"asd\"); */\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          background: \"red\",\r\n          height: \"400px\",\r\n          width: \"500px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"1rem 1rem\"\r\n        }}\r\n      >\r\n        <div\r\n          ref={a => (this.a = a)}\r\n          style={{\r\n            position: \"absolute\",\r\n            background: \"blue\"\r\n          }}\r\n        >\r\n          <div style={{ width: \"50px\", height: \"50px\" }}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Navbar from \"./Header/Navbar/Navbar\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport click from \"../../Reducers/rootReducer\";\r\nimport Sandbox from \"./Sandbox\";\r\n\r\nconst store = createStore(click);\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.burgerref = React.createRef(this.burgerref);\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\r\n      window.getComputedStyle(this.burgerref).getPropertyValue(\"top\")\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\r\n      window.getComputedStyle(this.burgerref).getPropertyValue(\"top\")\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Navbar refref={q => (this.burgerref = q)} click1 />\r\n        <Sandbox></Sandbox>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Main from \"./Components/Main/Main\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}